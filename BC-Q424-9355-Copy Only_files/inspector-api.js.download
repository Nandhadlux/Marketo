!function(){"use strict";const e="import-map-override:",t="external-import-map-override:",r="data-is-importmap-override",o="workfront-inspector:dev-versions",s=(e,t)=>localStorage.getItem(e)===t,n=()=>s("devtools","true"),a=()=>!s(o,"false"),i=(l=o,e=>localStorage.setItem(l,e));var l;function p(){return{imports:{},scopes:{},externalMaps:{}}}function c(e,t){const r={imports:{},scopes:{},externalMaps:{}};for(let t in e.imports)r.imports[t]=e.imports[t];for(let e in t.imports)r.imports[e]=t.imports[e];for(let t in e.scopes)r.scopes[t]=e.scopes[t];for(let e in t.scopes)r.scopes[e]=t.scopes[e];for(let t in e.externalMaps)r.externalMaps[t]=e.externalMaps[t];for(let e in t.externalMaps)r.externalMaps[e]=t.externalMaps[e];return r}let m;function d(){return m||(m=Array.prototype.reduce.call(document.querySelectorAll('script[type="systemjs-importmap"], script[type="overridable-importmap"]'),((e,t)=>{if(t.hasAttribute(r))return e;if(t.id.includes("inspector-ignore:"))return e.then((e=>{const r=t.dataset.importMapUrl,o=t.id.replace("inspector-ignore:",""),s={imports:{},scopes:{},externalMaps:{}};return s.imports[o]=r||"",c(e,s)}));{let r;return r=t.src?f(t.src):Promise.resolve(JSON.parse(t.textContent)),Promise.all([e,r]).then((e=>c(e[0],e[1])))}}),Promise.resolve({imports:{},scopes:{},externalMaps:{}})))}const u=[];function f(e){return fetch(e).then((e=>e.ok?e.json().catch((t=>(console.warn(Error(`External override import map contained invalid json, at url ${e.url}. ${t}`)),u.push(e.url),{imports:{},scopes:{},externalMaps:{}}))):(console.warn(Error(`Unable to download external override import map from url ${e.url}. Server responded with status ${e.status}`)),u.push(e.url),{imports:{},scopes:{},externalMaps:{}})),(()=>(console.warn(Error(`Unable to download external import map at url '${e}'`)),u.push(new URL(e,document.baseURI).href),{imports:{},scopes:{},externalMaps:{}})))}const v={react:e=>e.replace("production.min","development"),"react-dom":e=>e.replace("production.min","development"),"react-dom/client":e=>e.replace("production.min","development"),"react-dom/server":e=>e.replace("production.min","development"),"single-spa":e=>e.replace("single-spa.min.js","single-spa.dev.js")};function g(){i(!0),d().then((t=>{Object.keys(t.imports).filter((e=>v[e])).forEach((r=>{localStorage.setItem(`${e}${r}`,v[r](t.imports[r]))}))}))}function x(){n()&&a()&&g();const e=M(),{externalMaps:t,imports:r}=e;let o;if(!o){const e=document.querySelectorAll('script[type="systemjs-importmap"]');o=e?e[e.length-1]:null}Object.keys(t).forEach((e=>{const r=t[e];o=y(r,`external-import-map-overrides-${e.replace("@","").replace("/","-")}`,o)})),Object.keys(r).length>0&&y(e,"import-map-overrides",o)}function h(){const e=localStorage.getItem("import-map-overrides-disabled");return e?JSON.parse(e):[]}function M(r=!1){const o={imports:{},scopes:{},externalMaps:{}},s=h();for(let n=0;n<localStorage.length;n++){const a=localStorage.key(n);if(0===a.indexOf(e)){const t=a.slice(e.length);if(r||!s.indexOf(t)>=0){const e=localStorage.getItem(a);o.imports[t]=e}}else if(0===a.indexOf(t)){const e=a.slice(t.length),r=localStorage.getItem(a);o.externalMaps[e]=r}}return o}function y(e,t,o){const s=document.createElement("script");return s.type="systemjs-importmap",s.id=t,s.setAttribute(r,""),"string"==typeof e?s.src=e:s.textContent=JSON.stringify(e,null,2),o?o.insertAdjacentElement("afterend",s):document.head.appendChild(s),s}window.wf_inspector={isDevtoolsEnabled:n,initOverrides:x,getDisabledOverrides:h,getOverrideMap:M,createEmptyImportMap:p,insertOverrideMap:y,localStoragePrefix:e,externalMapPrefix:t,overrideAttribute:r,removeOverrides:function(){for(let t=0;t<localStorage.length;t++){const r=localStorage.key(t);0===r.indexOf(e)&&localStorage.removeItem(r)}},getInitialMap:d,mergeImportMap:c,activateDevelopmentVersions:g,removeDevelopmentVersions:function(){i(!1),Object.keys(v).forEach((t=>{localStorage.removeItem(""+e+t)}))},fetchExternalMap:f,areLibDevVersionsEnabled:a},x()}();
